version: '3.8'
# Defines the name of the Docker Compose project.
# This name is used for network and container prefixes.
name: media-fs

services:
  # ==============================
  # PostgreSQL Database Service
  # ==============================
  postgres:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER=media   # Database username
      - POSTGRES_PASSWORD=media  # Database password
    logging:
      options:
        max-size: 10m   # Limits log file size to 10MB
        max-file: "3"   # Keeps up to 3 log files
    ports:
      - '5432:5432'  # Maps container's PostgreSQL port to the host
    volumes:
      - ../../../postgres-data:/var/lib/postgresql/data  # Persists database data across container restarts
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U media" ]  # Checks if PostgreSQL is ready
      interval: 5s  # Runs health check every 5 seconds
      timeout: 5s   # Timeout for each check
      retries: 5    # Retries health check 5 times before failing

  # ==============================
  # MinIO Object Storage Service
  # ==============================
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # MinIO API port
      - "9001:9001"  # MinIO Web UI console port
    volumes:
      - ../../../minio-data:/data  # Persistent storage for MinIO
    environment:
      MINIO_ROOT_USER: minioroot  # MinIO admin username
      MINIO_ROOT_PASSWORD: miniopassword  # MinIO admin password
    command: server /data --console-address ":9001"  # Starts MinIO with console enabled on port 9001

  # ==============================
  # MinIO Initialization Service
  # ==============================
  # This service initializes MinIO, such as creating buckets.
  minio-init:
    image: quay.io/minio/mc
    depends_on:
      - minio  # Ensures MinIO starts before running this init script
    entrypoint: [ "/bin/sh", "-c", "/init-minio.sh" ]  # Executes initialization script
    volumes:
      - ./init-minio.sh:/init-minio.sh  # Mounts the initialization script into the container

  # ==============================
  # Application Service (media-fs)
  # ==============================
  app:
    image: media-fs:latest
    container_name: media-fs
    restart: no  # The application should not restart automatically if it crashes
    mem_reservation: 2g  # Reserves 2GB of memory to ensure stability
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allows the container to resolve the host machine as 'host.docker.internal'
    environment:
      # Quarkus HTTP Configuration
      - QUARKUS_HTTP_PORT=8080  # Port for main HTTP requests

      # Database Configuration
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://host.docker.internal:5432/media  # PostgreSQL connection URL
      - QUARKUS_DATASOURCE_USERNAME=media  # Database username
      - QUARKUS_DATASOURCE_PASSWORD=media  # Database password

      # MinIO Configuration
      - QUARKUS_MINIO_URL=http://host.docker.internal:9000  # MinIO service URL
      - QUARKUS_MINIO_ACCESS_KEY=media-access-key  # MinIO access key
      - QUARKUS_MINIO_SECRET_KEY=media-secret-key  # MinIO secret key
      - QUARKUS_MINIO_SECURE=false  # Disables SSL for MinIO (useful for local development)

    ports:
      - '8080:8080'  # Maps application HTTP port
      - '10099:10099'  # JMX port
      - '10100:10100'

    depends_on:
      postgres:
        condition: service_healthy  # Ensures PostgreSQL is fully initialized before starting the app
      minio:
        condition: service_started  # Ensures MinIO is started before the app
